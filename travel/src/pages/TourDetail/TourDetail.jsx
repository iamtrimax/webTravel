import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import './TourDetail.scss';

const TourDetail = () => {
  const navigate = useNavigate();
  const [selectedImage, setSelectedImage] = useState(0);
  const [activeTab, setActiveTab] = useState('overview');
  const [selectedDate, setSelectedDate] = useState('');
  const [travelers, setTravelers] = useState(1);
  const [showBookingModal, setShowBookingModal] = useState(false);

  // Demo data - kh√¥ng c·∫ßn call API
  const tour = {
    _id: 'demo-tour-1',
    title: 'Kh√°m Ph√° V·ªãnh H·∫° Long - K·ª≥ Quan Thi√™n Nhi√™n Th·∫ø Gi·ªõi',
    description: 'H√†nh tr√¨nh kh√°m ph√° V·ªãnh H·∫° Long - di s·∫£n thi√™n nhi√™n th·∫ø gi·ªõi ƒë∆∞·ª£c UNESCO c√¥ng nh·∫≠n. Tr·∫£i nghi·ªám du thuy·ªÅn sang tr·ªçng, th∆∞·ªüng ngo·∫°n c·∫£nh ƒë·∫πp ngo·∫°n m·ª•c c·ªßa nh·ªØng h√≤n ƒë·∫£o ƒë√° v√¥i h√πng vƒ©, hang ƒë·ªông k·ª≥ b√≠ v√† l√†ng ch√†i truy·ªÅn th·ªëng.',
    destination: 'V·ªãnh H·∫° Long, Qu·∫£ng Ninh',
    duration: 3,
    price: 3500000,
    discountPrice: 2990000,
    category: 'beach',
    images: [
      { url: 'https://images.unsplash.com/photo-1552465011-b4e21bf6e79a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80' },
      { url: 'https://images.unsplash.com/photo-1575361204480-aadea25e6e68?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80' },
      { url: 'https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80' },
      { url: 'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80' }
    ],
    startDates: [
      '2024-02-15',
      '2024-02-20',
      '2024-02-25',
      '2024-03-01',
      '2024-03-05'
    ],
    highlights: [
      'Du thuy·ªÅn 5 sao sang tr·ªçng',
      'Tham quan Hang S·ª≠ng S·ªët - hang ƒë·ªông ƒë·∫πp nh·∫•t H·∫° Long',
      'Ch√®o kayak kh√°m ph√° hang Lu·ªìn',
      'Ng·∫Øm b√¨nh minh tr√™n v·ªãnh',
      'Th∆∞·ªüng th·ª©c h·∫£i s·∫£n t∆∞∆°i s·ªëng',
      'Tham quan l√†ng ch√†i Vung Vi√™ng'
    ],
    itinerary: [
      {
        title: 'Ng√†y 1: H√† N·ªôi - H·∫° Long - Du thuy·ªÅn',
        description: 'Kh·ªüi h√†nh t·ª´ H√† N·ªôi, ƒë√≥n du kh√°ch t·∫°i ƒëi·ªÉm h·∫πn. Di chuy·ªÉn ƒë·∫øn H·∫° Long, check-in du thuy·ªÅn v√† th∆∞·ªüng th·ª©c b·ªØa tr∆∞a v·ªõi h·∫£i s·∫£n t∆∞∆°i ngon.',
        activities: [
          '08:00: ƒê√≥n kh√°ch t·∫°i ƒëi·ªÉm h·∫πn ·ªü H√† N·ªôi',
          '12:00: Check-in du thuy·ªÅn, th∆∞·ªüng th·ª©c b·ªØa tr∆∞a',
          '14:00: Tham quan Hang S·ª≠ng S·ªët',
          '16:00: Ch√®o kayak t·∫°i hang Lu·ªìn',
          '19:00: B·ªØa t·ªëi tr√™n du thuy·ªÅn, c√¢u m·ª±c ƒë√™m'
        ]
      },
      {
        title: 'Ng√†y 2: Kh√°m Ph√° V·ªãnh H·∫° Long',
        description: 'Ng√†y tr·ªçn v·∫πn kh√°m ph√° v·∫ª ƒë·∫πp c·ªßa V·ªãnh H·∫° Long v·ªõi c√°c ƒëi·ªÉm ƒë·∫øn n·ªïi ti·∫øng v√† ho·∫°t ƒë·ªông th√∫ v·ªã.',
        activities: [
          '06:00: Ng·∫Øm b√¨nh minh tr√™n v·ªãnh, t·∫≠p Th√°i C·ª±c Quy·ªÅn',
          '08:00: Tham quan l√†ng ch√†i Vung Vi√™ng',
          '10:00: B∆°i l·ªôi t·∫°i b√£i bi·ªÉn Titop',
          '12:00: B·ªØa tr∆∞a tr√™n du thuy·ªÅn',
          '14:00: Tham quan hang Trinh N·ªØ',
          '17:00: N·∫•u l·ªõp h·ªçc ·∫©m th·ª±c Vi·ªát'
        ]
      },
      {
        title: 'Ng√†y 3: H·∫° Long - H√† N·ªôi',
        description: 'Bu·ªïi s√°ng th∆∞ gi√£n v√† kh√°m ph√° n·ªët nh·ªØng ƒëi·ªÉm ƒë·∫øn cu·ªëi c√πng tr∆∞·ªõc khi tr·ªü v·ªÅ H√† N·ªôi.',
        activities: [
          '06:30: Ng·∫Øm b√¨nh minh, t·∫≠p yoga',
          '08:00: Tham quan hang ƒê·∫ßu G·ªó',
          '09:30: Check-out du thuy·ªÅn',
          '10:30: B·ªØa brunch tr∆∞·ªõc khi r·ªùi ƒëi',
          '12:00: Kh·ªüi h√†nh v·ªÅ H√† N·ªôi',
          '16:00: V·ªÅ ƒë·∫øn H√† N·ªôi, k·∫øt th√∫c tour'
        ]
      }
    ],
    included: [
      'Ph√≤ng ngh·ªâ tr√™n du thuy·ªÅn 5 sao (2 ƒë√™m)',
      'C√°c b·ªØa ƒÉn theo ch∆∞∆°ng tr√¨nh (6 b·ªØa)',
      'V√© tham quan c√°c ƒëi·ªÉm du l·ªãch',
      'Xe ƒë∆∞a ƒë√≥n H√† N·ªôi - H·∫° Long - H√† N·ªôi',
      'H∆∞·ªõng d·∫´n vi√™n ti·∫øng Vi·ªát/Anh',
      'Kayak v√† thi·∫øt b·ªã an to√†n',
      'B·∫£o hi·ªÉm du l·ªãch',
      'N∆∞·ªõc u·ªëng tr√™n xe v√† du thuy·ªÅn'
    ],
    excluded: [
      'ƒê·ªì u·ªëng c√≥ c·ªìn',
      'Chi ph√≠ c√° nh√¢n',
      'Tip cho h∆∞·ªõng d·∫´n vi√™n v√† l√°i xe',
      'C√°c d·ªãch v·ª• kh√¥ng mentioned trong ch∆∞∆°ng tr√¨nh',
      'V√© m√°y bay/qu·ªëc t·∫ø'
    ],
    tags: ['halong', 'duthuyen', 'bien', 'UNESCO', 'caonguyen'],
    reviews: [
      {
        user: 'Nguy·ªÖn Th·ªã Minh',
        rating: 5,
        comment: 'Tour tuy·ªát v·ªùi! Du thuy·ªÅn r·∫•t sang tr·ªçng, ƒë·ªì ƒÉn ngon, h∆∞·ªõng d·∫´n vi√™n nhi·ªát t√¨nh. C·∫£nh ƒë·∫πp kh√¥ng th·ªÉ t·∫£ b·∫±ng l·ªùi, ƒë·∫∑c bi·ªát l√† l√∫c b√¨nh minh tr√™n v·ªãnh.',
        date: '2024-01-15'
      },
      {
        user: 'Tr·∫ßn VƒÉn H√πng',
        rating: 4,
        comment: 'Tr·∫£i nghi·ªám r·∫•t ƒë√°ng gi√°. Hang S·ª≠ng S·ªët ƒë·∫πp ngo·∫°n m·ª•c, kayak r·∫•t th√∫ v·ªã. Ch·ªâ h∆°i ti·∫øc l√† th·ªùi ti·∫øt kh√¥ng ƒë∆∞·ª£c ƒë·∫πp l·∫Øm v√†o ng√†y th·ª© 2.',
        date: '2024-01-10'
      },
      {
        user: 'L√™ Ho√†ng Anh',
        rating: 5,
        comment: 'D·ªãch v·ª• 5 sao! T·ª´ ƒë√≥n ti·∫øp, ph·ª•c v·ª• ƒë·∫øn h∆∞·ªõng d·∫´n ƒë·ªÅu r·∫•t chuy√™n nghi·ªáp. S·∫Ω gi·ªõi thi·ªáu cho b·∫°n b√® v√† quay l·∫°i v√†o nƒÉm sau.',
        date: '2024-01-08'
      }
    ],
    rating: {
      average: 4.7,
      count: 128
    }
  };

  // Set default selected date
  if (!selectedDate && tour.startDates.length > 0) {
    setSelectedDate(tour.startDates[0]);
  }

  const handleBookTour = () => {
    const token = localStorage.getItem("accessToken");
    if (!token) {
      alert("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ ƒë·∫∑t tour");
      navigate("/login");
      return;
    }
    setShowBookingModal(true);
  };

  const handleConfirmBooking = () => {
    alert(`ƒê·∫∑t tour "${tour.title}" th√†nh c√¥ng!\nS·ªë l∆∞·ª£ng: ${travelers} ng∆∞·ªùi\nNg√†y kh·ªüi h√†nh: ${new Date(selectedDate).toLocaleDateString('vi-VN')}`);
    setShowBookingModal(false);
  };

  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price);
  };

  const calculateDiscountPercentage = () => {
    if (!tour.discountPrice || !tour.price) return 0;
    return Math.round(((tour.price - tour.discountPrice) / tour.price) * 100);
  };

  const handleTravelersChange = (amount) => {
    setTravelers(prev => Math.max(1, prev + amount));
  };

  return (
    <div className="tour-detail-page">
      {/* Breadcrumb */}
      <nav className="breadcrumb">
        <div className="container">
          <Link to="/">Trang ch·ªß</Link>
          <span className="separator">/</span>
          <Link to="/booking">ƒê·∫∑t tour</Link>
          <span className="separator">/</span>
          <span className="current">{tour.title}</span>
        </div>
      </nav>

      {/* Main Content */}
      <div className="container">
        <div className="tour-detail-content">
          {/* Image Gallery */}
          <section className="image-gallery-section">
            <div className="main-image">
              <img 
                src={tour.images[selectedImage]?.url || tour.images[0]?.url} 
                alt={tour.title}
              />
              {tour.discountPrice && (
                <div className="discount-badge">
                  -{calculateDiscountPercentage()}%
                </div>
              )}
            </div>
            <div className="thumbnail-grid">
              {tour.images.map((image, index) => (
                <div
                  key={index}
                  className={`thumbnail ${selectedImage === index ? 'active' : ''}`}
                  onClick={() => setSelectedImage(index)}
                >
                  <img src={image.url} alt={`${tour.title} ${index + 1}`} />
                </div>
              ))}
            </div>
          </section>

          {/* Tour Info & Booking */}
          <section className="tour-info-section">
            {/* Tour Header */}
            <div className="tour-header">
              <div className="tour-meta">
                <span className="category-badge">
                  {getCategoryIcon(tour.category)} {getCategoryName(tour.category)}
                </span>
                <span className="duration">
                  üìÖ {tour.duration} ng√†y {tour.duration - 1} ƒë√™m
                </span>
                <span className="rating">
                  ‚≠ê {tour.rating.average} ({tour.rating.count} ƒë√°nh gi√°)
                </span>
              </div>
              
              <h1 className="tour-title">{tour.title}</h1>
              <p className="tour-location">üìç {tour.destination}</p>

              {/* Price Section */}
              <div className="price-section">
                {tour.discountPrice ? (
                  <>
                    <div className="discount-price">
                      {formatPrice(tour.discountPrice)}
                      <span className="price-unit">/ng∆∞·ªùi</span>
                    </div>
                    <div className="original-price">
                      {formatPrice(tour.price)}
                    </div>
                    <div className="save-amount">
                      Ti·∫øt ki·ªám {formatPrice(tour.price - tour.discountPrice)}
                    </div>
                  </>
                ) : (
                  <div className="normal-price">
                    {formatPrice(tour.price)}
                    <span className="price-unit">/ng∆∞·ªùi</span>
                  </div>
                )}
              </div>
            </div>

            {/* Quick Booking Card */}
            <div className="booking-card">
              <h3>ƒê·∫∑t Tour Nhanh</h3>
              
              {/* Date Selection */}
              <div className="booking-field">
                <label>Ng√†y kh·ªüi h√†nh</label>
                <select 
                  value={selectedDate} 
                  onChange={(e) => setSelectedDate(e.target.value)}
                  className="date-select"
                >
                  {tour.startDates.map((date, index) => (
                    <option key={index} value={date}>
                      {new Date(date).toLocaleDateString('vi-VN', {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </option>
                  ))}
                </select>
              </div>

              {/* Travelers Selection */}
              <div className="booking-field">
                <label>S·ªë l∆∞·ª£ng ng∆∞·ªùi</label>
                <div className="traveler-counter">
                  <button 
                    className="counter-btn"
                    onClick={() => handleTravelersChange(-1)}
                    disabled={travelers <= 1}
                  >
                    -
                  </button>
                  <span className="counter-value">{travelers}</span>
                  <button 
                    className="counter-btn"
                    onClick={() => handleTravelersChange(1)}
                  >
                    +
                  </button>
                </div>
              </div>

              {/* Total Price */}
              <div className="total-price">
                <span>T·ªïng c·ªông:</span>
                <span className="amount">
                  {formatPrice((tour.discountPrice || tour.price) * travelers)}
                </span>
              </div>

              {/* Book Button */}
              <button 
                className="book-now-btn"
                onClick={handleBookTour}
              >
                üé´ ƒê·∫∑t Tour Ngay
              </button>

              <div className="booking-features">
                <div className="feature">
                  <span className="icon">‚úì</span>
                  <span>X√°c nh·∫≠n ngay l·∫≠p t·ª©c</span>
                </div>
                <div className="feature">
                  <span className="icon">üõ°Ô∏è</span>
                  <span>ƒê·∫£m b·∫£o gi√° t·ªët nh·∫•t</span>
                </div>
                <div className="feature">
                  <span className="icon">üìß</span>
                  <span>Nh·∫≠n email x√°c nh·∫≠n</span>
                </div>
              </div>
            </div>
          </section>
        </div>

        {/* Tour Details Tabs */}
        <section className="tour-details-tabs">
          <div className="tab-headers">
            {['overview', 'itinerary', 'included', 'reviews'].map(tab => (
              <button
                key={tab}
                className={`tab-header ${activeTab === tab ? 'active' : ''}`}
                onClick={() => setActiveTab(tab)}
              >
                {getTabTitle(tab)}
              </button>
            ))}
          </div>

          <div className="tab-content">
            {/* Overview Tab */}
            {activeTab === 'overview' && (
              <div className="tab-panel">
                <h3>Gi·ªõi Thi·ªáu Tour</h3>
                <p className="tour-description">{tour.description}</p>
                
                {/* Highlights */}
                <div className="highlights-section">
                  <h4>ƒêi·ªÉm N·ªïi B·∫≠t</h4>
                  <div className="highlights-grid">
                    {tour.highlights.map((highlight, index) => (
                      <div key={index} className="highlight-item">
                        <span className="highlight-icon">‚ú®</span>
                        <span>{highlight}</span>
                      </div>
                    ))}
                  </div>
                </div>

                {/* Tags */}
                <div className="tags-section">
                  <h4>Tags</h4>
                  <div className="tags-container">
                    {tour.tags.map((tag, index) => (
                      <span key={index} className="tag">
                        #{tag}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
            )}

            {/* Itinerary Tab */}
            {activeTab === 'itinerary' && (
              <div className="tab-panel">
                <h3>L·ªãch Tr√¨nh Chi Ti·∫øt</h3>
                <div className="itinerary-timeline">
                  {tour.itinerary.map((day, index) => (
                    <div key={index} className="timeline-item">
                      <div className="timeline-marker">
                        <span className="day-number">Ng√†y {index + 1}</span>
                      </div>
                      <div className="timeline-content">
                        <h4>{day.title}</h4>
                        <p>{day.description}</p>
                        {day.activities && (
                          <ul className="activities-list">
                            {day.activities.map((activity, activityIndex) => (
                              <li key={activityIndex}>{activity}</li>
                            ))}
                          </ul>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* Included/Excluded Tab */}
            {activeTab === 'included' && (
              <div className="tab-panel">
                <div className="included-excluded-grid">
                  {/* Included */}
                  <div className="included-section">
                    <h4>üí∞ Chi Ph√≠ Bao G·ªìm</h4>
                    <ul className="included-list">
                      {tour.included.map((item, index) => (
                        <li key={index}>
                          <span className="check-icon">‚úì</span>
                          {item}
                        </li>
                      ))}
                    </ul>
                  </div>

                  {/* Excluded */}
                  <div className="excluded-section">
                    <h4>üí∏ Chi Ph√≠ Kh√¥ng Bao G·ªìm</h4>
                    <ul className="excluded-list">
                      {tour.excluded.map((item, index) => (
                        <li key={index}>
                          <span className="cross-icon">‚úó</span>
                          {item}
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            )}

            {/* Reviews Tab */}
            {activeTab === 'reviews' && (
              <div className="tab-panel">
                <h3>ƒê√°nh Gi√° T·ª´ Kh√°ch H√†ng</h3>
                <div className="reviews-section">
                  {tour.reviews.map((review, index) => (
                    <div key={index} className="review-card">
                      <div className="review-header">
                        <div className="reviewer-info">
                          <span className="reviewer-avatar">
                            {review.user.charAt(0)}
                          </span>
                          <div>
                            <div className="reviewer-name">
                              {review.user}
                            </div>
                            <div className="review-date">
                              {new Date(review.date).toLocaleDateString('vi-VN')}
                            </div>
                          </div>
                        </div>
                        <div className="review-rating">
                          {'‚≠ê'.repeat(review.rating)}
                        </div>
                      </div>
                      <p className="review-content">{review.comment}</p>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        </section>
      </div>

      {/* Booking Modal */}
      {showBookingModal && (
        <div className="booking-modal-overlay">
          <div className="booking-modal">
            <div className="modal-header">
              <h3>X√°c Nh·∫≠n ƒê·∫∑t Tour</h3>
              <button 
                className="close-btn"
                onClick={() => setShowBookingModal(false)}
              >
                ‚úï
              </button>
            </div>
            
            <div className="modal-content">
              <div className="booking-summary">
                <h4>{tour.title}</h4>
                <div className="summary-details">
                  <div className="detail-item">
                    <span>Ng√†y kh·ªüi h√†nh:</span>
                    <span>{new Date(selectedDate).toLocaleDateString('vi-VN')}</span>
                  </div>
                  <div className="detail-item">
                    <span>S·ªë l∆∞·ª£ng:</span>
                    <span>{travelers} ng∆∞·ªùi</span>
                  </div>
                  <div className="detail-item">
                    <span>ƒê∆°n gi√°:</span>
                    <span>{formatPrice(tour.discountPrice || tour.price)}</span>
                  </div>
                  <div className="detail-item total">
                    <span>T·ªïng c·ªông:</span>
                    <span>{formatPrice((tour.discountPrice || tour.price) * travelers)}</span>
                  </div>
                </div>
              </div>
            </div>

            <div className="modal-actions">
              <button 
                className="cancel-btn"
                onClick={() => setShowBookingModal(false)}
              >
                H·ªßy
              </button>
              <button 
                className="confirm-btn"
                onClick={handleConfirmBooking}
              >
                X√°c Nh·∫≠n ƒê·∫∑t Tour
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

// Helper functions
const getCategoryIcon = (category) => {
  const icons = {
    beach: 'üèñÔ∏è',
    mountain: '‚õ∞Ô∏è',
    adventure: 'üßó',
    cultural: 'üèØ',
    city: 'üèôÔ∏è'
  };
  return icons[category] || 'üåç';
};

const getCategoryName = (category) => {
  const names = {
    beach: 'Bi·ªÉn',
    mountain: 'N√∫i',
    adventure: 'Phi√™u L∆∞u',
    cultural: 'VƒÉn H√≥a',
    city: 'Th√†nh Ph·ªë'
  };
  return names[category] || 'Du L·ªãch';
};

const getTabTitle = (tab) => {
  const titles = {
    overview: 'T·ªïng Quan',
    itinerary: 'L·ªãch Tr√¨nh',
    included: 'D·ªãch V·ª•',
    reviews: 'ƒê√°nh Gi√°'
  };
  return titles[tab];
};

export default TourDetail;